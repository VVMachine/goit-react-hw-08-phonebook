{"version":3,"sources":["redux/contact/contactActions.js","redux/auth/authOperations.js","components/UserMenu/UserMenu.module.css","redux/auth/authActions.js","components/App/App.module.css","redux/auth/authSelectors.js","components/UserMenu/UserMenu.jsx","components/PrivateRoute/PrivateRoute.js","components/PublicRoute/PublicRoute.js","routes.js","components/App/App.jsx","redux/contact/contactReducers.js","redux/auth/authReducer.js","redux/store.js","index.js"],"names":["addContactRequest","createAction","addContactSuccess","addContactError","removeContactRequest","removeContactSuccess","removeContactError","fetchContactRequest","fetchContactSuccess","fetchContactError","contactListRefresh","filter","axios","defaults","baseURL","token","headers","common","Authorization","register","credentials","dispatch","authActions","registerRequest","post","then","response","data","registerSuccess","catch","error","registerError","logIn","loginRequest","loginSuccess","loginError","logOut","logoutRequest","logoutSuccess","contactActions","logoutError","getCurrentUser","getState","persistedToken","auth","getCurrentUserRequest","get","getCurrentUserSuccess","getCurrentUserError","module","exports","state","user","name","connect","authSelectors","onLogout","authOperations","className","styles","container","welcomeTitle","type","onClick","button","isAuthenticated","Component","component","routeProps","render","props","to","restricted","path","label","exact","lazy","private","App","this","onGetCurrentUser","icon","faHome","size","color","fallback","routes","map","route","key","itemReducer","createReducer","action","payload","contact","id","filterReducer","combineReducers","items","initialUserState","email","_","authPersistConfig","storage","whitelist","store","configureStore","reducer","contacts","contactReducers","persistReducer","authReducer","persistor","persistStore","ReactDOM","loading","document","getElementById"],"mappings":"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","file":"static/js/main.bffadcbf.chunk.js","sourcesContent":["import { createAction } from \"@reduxjs/toolkit\";\r\n\r\n\r\nconst addContactRequest = createAction(\"contact/addRequest\");\r\nconst addContactSuccess = createAction(\"contact/addSuccess\");\r\nconst addContactError = createAction(\"contact/addError\");\r\n\r\nconst removeContactRequest = createAction(\"contact/removeRequest\");\r\nconst removeContactSuccess = createAction(\"contact/removeSuccess\");\r\nconst removeContactError = createAction(\"contact/removeError\");\r\n\r\nconst fetchContactRequest = createAction(\"contact/fetchRequest\");\r\nconst fetchContactSuccess = createAction(\"contact/fetchSuccess\");\r\nconst fetchContactError = createAction(\"contact/fetchError\");\r\n\r\n\r\nconst contactListRefresh = createAction(\"contact/listRefresh\");\r\n\r\n\r\nconst filter = createAction(\"contact/filter\");\r\n\r\n\r\nexport default {\r\n\r\n  filter,\r\n\r\n\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  removeContactRequest,\r\n  removeContactSuccess,\r\n  removeContactError,\r\n  fetchContactRequest,\r\n  fetchContactSuccess,\r\n  fetchContactError,\r\n\r\n  contactListRefresh,\r\n  \r\n};\r\n","import axios from \"axios\";\r\nimport authActions from \"./authActions\";\r\nimport contactActions from \"../contact/contactActions\";\r\n\r\naxios.defaults.baseURL = \"https://goit-phonebook-api.herokuapp.com\";\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = \"\";\r\n  },\r\n};\r\n\r\nconst register = (credentials) => (dispatch) => {\r\n  dispatch(authActions.registerRequest());\r\n\r\n  axios\r\n    .post(\"/users/signup\", credentials)\r\n    .then((response) => {\r\n      // console.log(response);\r\n\r\n      token.set(response.data.token);\r\n      dispatch(authActions.registerSuccess(response.data));\r\n    })\r\n    .catch((error) => dispatch(authActions.registerError(error)));\r\n};\r\n\r\nconst logIn = (credentials) => (dispatch) => {\r\n  dispatch(authActions.loginRequest());\r\n\r\n  axios\r\n    .post(\"/users/login\", credentials)\r\n    .then((response) => {\r\n      token.set(response.data.token);\r\n      dispatch(authActions.loginSuccess(response.data));\r\n    })\r\n    .catch((error) => dispatch(authActions.loginError(error)));\r\n};\r\n\r\nconst logOut = () => (dispatch) => {\r\n  dispatch(authActions.logoutRequest());\r\n\r\n  axios\r\n    .post(\"/users/logout\")\r\n    .then(() => {\r\n      token.unset();\r\n      dispatch(authActions.logoutSuccess());\r\n      dispatch(contactActions.contactListRefresh());\r\n    })\r\n    .catch((error) => dispatch(authActions.logoutError(error)));\r\n};\r\n\r\nconst getCurrentUser = () => (dispatch, getState) => {\r\n  const {\r\n    auth: { token: persistedToken },\r\n  } = getState();\r\n\r\n  if (!persistedToken) {\r\n    return;\r\n  }\r\n\r\n  token.set(persistedToken);\r\n  dispatch(authActions.getCurrentUserRequest());\r\n\r\n  axios\r\n    .get(\"/users/current\")\r\n    .then(({ data }) => dispatch(authActions.getCurrentUserSuccess(data)))\r\n    .catch((error) => authActions.getCurrentUserError(error));\r\n};\r\n\r\nexport default { register, logIn, logOut, getCurrentUser };\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"UserMenu_container__1gHxW\",\"button\":\"UserMenu_button__3hv_N\",\"welcomeTitle\":\"UserMenu_welcomeTitle__2l51m\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst registerRequest = createAction('auth/registerRequest');\r\nconst registerSuccess = createAction('auth/registerSuccess');\r\nconst registerError = createAction('auth/registerError');\r\n\r\nconst loginRequest = createAction('auth/loginRequest');\r\nconst loginSuccess = createAction('auth/loginSuccess');\r\nconst loginError = createAction('auth/loginError');\r\n\r\nconst logoutRequest = createAction('auth/logoutRequest');\r\nconst logoutSuccess = createAction('auth/logoutSuccess');\r\nconst logoutError = createAction('auth/logoutError');\r\n\r\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\r\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\r\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\r\n\r\nexport default {\r\n  registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3Jx6P\",\"link\":\"App_link__2BfWt\"};","  \r\nconst isAuthenticated = state => state.auth.token;\r\n\r\nconst getUserName = state => state.auth.user.name;\r\n\r\nexport default { isAuthenticated, getUserName };","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport authSelectors from '../../redux/auth/authSelectors'\r\nimport authOperations from '../../redux/auth/authOperations'\r\n\r\nimport styles from './UserMenu.module.css';\r\n\r\nfunction UserMenu({onLogout, name}) {\r\n    return (\r\n        <div className={styles.container}>\r\n        <span className={styles.welcomeTitle}>Welcome, {name}</span>\r\n        \r\n        <button type=\"button\" onClick={onLogout} className={styles.button}>\r\n          Logout\r\n        </button>\r\n      </div>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    name: authSelectors.getUserName(state),\r\n  });\r\n\r\n\r\nexport default connect(mapStateToProps, {onLogout: authOperations.logOut})(UserMenu);","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport authSelectors from \"../../redux/auth/authSelectors\";\r\n\r\nconst PrivateRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={(props) =>\r\n      isAuthenticated ? <Component {...props} /> : <Redirect to=\"/\" />\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: authSelectors.isAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport authSelectors from \"../../redux/auth/authSelectors\";\r\n\r\nconst PublicRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={(props) =>\r\n      isAuthenticated && routeProps.restricted ? (\r\n        <Redirect to=\"/contacts\" />\r\n      ) : (\r\n        <Component {...props} />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: authSelectors.isAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PublicRoute);\r\n","import { lazy } from \"react\";\r\n\r\nexport default [\r\n  {\r\n    path: \"/\",\r\n    label: \"Home\",\r\n    exact: true,\r\n    component: lazy(() => import(\"./pages/HomePage/HomePage\")),\r\n    private: false,\r\n    restricted: false,\r\n  },\r\n  {\r\n    path: \"/register\",\r\n    label: \"Register\",\r\n    exact: true,\r\n    component: lazy(() => import(\"./pages/Register/Register\")),\r\n    private: false,\r\n    restricted: true,\r\n  },\r\n  {\r\n    path: \"/login\",\r\n    label: \"Login\",\r\n    exact: true,\r\n    component: lazy(() => import(\"./pages/Login/Login\")),\r\n    private: false,\r\n    restricted: true,\r\n  },\r\n  {\r\n    path: \"/contacts\",\r\n    label: \"Contacts\",\r\n    exact: true,\r\n    component: lazy(() => import(\"./pages/Contacts/Contacts\")),\r\n    private: true,\r\n    restricted: false,\r\n  },\r\n];\r\n","import React, { Component, Suspense } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { Switch } from \"react-router-dom\";\n\nimport authSelectors from \"../../redux/auth/authSelectors\";\nimport authOperations from \"../../redux/auth/authOperations\";\n\nimport UserMenu from \"../UserMenu/UserMenu\";\n\nimport PrivateRoute from \"../PrivateRoute/PrivateRoute\";\nimport PublicRoute from \"../PublicRoute/PublicRoute\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faHome } from \"@fortawesome/free-solid-svg-icons\";\nimport { Link } from \"react-router-dom\";\n\nimport routes from \"../../routes\";\n\nimport styles from \"./App.module.css\";\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onGetCurrentUser();\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className={styles.container}>\n          {!this.props.isAuthenticated && (\n            <Link to=\"/\" exact className=\"linkHome\">\n              <FontAwesomeIcon icon={faHome} size=\"3x\" color=\"#304a63\" />\n            </Link>\n          )}\n\n          {this.props.isAuthenticated && <UserMenu />}\n\n          <Suspense fallback={`Loading.........`}>\n            <Switch>\n              {routes.map((route) =>\n                route.private ? (\n                  <PrivateRoute key={route.label} {...route} />\n                ) : (\n                  <PublicRoute key={route.label} {...route} />\n                )\n              )}\n            </Switch>\n          </Suspense>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: authSelectors.isAuthenticated(state),\n});\n\nexport default connect(mapStateToProps, {\n  onGetCurrentUser: authOperations.getCurrentUser,\n})(App);\n","import { combineReducers } from \"redux\";\r\n\r\n\r\n\r\n\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport contactActions from \"./contactActions\";\r\n\r\nconst addContact = (state, action) => {\r\n\r\n  return [action.payload, ...state];\r\n};\r\n\r\nconst fetchContacts = (state, action) => action.payload;\r\n\r\nconst removeContact = (state, action) => {\r\n  return state.filter((contact) => contact.id !== action.payload);\r\n};\r\n\r\nconst listRefresh = () => [];\r\n\r\n\r\nconst itemReducer = createReducer([], {\r\n  [contactActions.addContactSuccess]: addContact,\r\n  [contactActions.removeContactSuccess]: removeContact,\r\n  [contactActions.fetchContactSuccess]: fetchContacts,\r\n  [contactActions.contactListRefresh]: listRefresh,\r\n});\r\n\r\nconst filterContacts = (state, action) => action.payload;\r\n\r\nconst filterReducer = createReducer(\"\", {\r\n  [contactActions.filter]: filterContacts,\r\n});\r\n\r\n\r\n\r\n\r\nexport default combineReducers({\r\n  items: itemReducer,\r\n  filter: filterReducer,\r\n});","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport authActions from './authActions';\r\n\r\nconst initialUserState = { name: null, email: null };\r\n\r\nconst user = createReducer(initialUserState, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\r\n  [authActions.logoutSuccess]: () => initialUserState,\r\n});\r\n\r\nconst token = createReducer(null, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.logoutSuccess]: () => null,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n  [authActions.registerError]: (_, { payload }) => payload,\r\n  [authActions.loginError]: (_, { payload }) => payload,\r\n  [authActions.logoutError]: (_, { payload }) => payload,\r\n  [authActions.getCurrentUserError]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  user,\r\n  token,\r\n  error,\r\n});","import { configureStore } from '@reduxjs/toolkit';\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nimport contactReducers from \"./contact/contactReducers\";\r\nimport authReducer  from './auth/authReducer'\r\n\r\n\r\nconst authPersistConfig = {\r\n  key: 'auth',\r\n  storage,\r\n  whitelist: ['token'],\r\n};\r\n\r\n\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    contacts: contactReducers,\r\n    auth: persistReducer(authPersistConfig, authReducer),\r\n  }\r\n})\r\n\r\n\r\nexport const persistor = persistStore(store);","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App/App\";\n\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { store, persistor } from \"./redux/store\";\n\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}