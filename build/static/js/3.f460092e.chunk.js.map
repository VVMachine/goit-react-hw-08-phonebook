{"version":3,"sources":["redux/contact/contactOperations.js","redux/contact/contactSelectors.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","components/Logo/Logo.jsx","components/Notification/Notification.jsx","pages/Contacts/Contacts.jsx","components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","CSSTransitions/slide.module.css","components/Logo/Logo.module.css","components/Notification/Notification.module.css","CSSTransitions/slideLogo.module.css","CSSTransitions/pop.module.css","pages/Contacts/Contacts.module.css"],"names":["axios","defaults","baseURL","addContact","contact","dispatch","contactActions","addContactRequest","post","then","resp","addContactSuccess","data","catch","error","addContactError","removeContact","id","removeContactRequest","delete","removeContactSuccess","removeContactError","fetchContacts","fetchContactRequest","get","fetchContactSuccess","fetchContactError","getContactItems","state","contacts","items","getFitredContactItems","createSelector","filter","item","name","toLowerCase","includes","ContactForm","number","clearInput","e","target","value","inputHandler","setState","addButtonHandler","preventDefault","props","some","onOpenNotification","onAddContact","onSubmit","this","className","styles","input","fieldName","type","placeholder","onChange","onClick","pattern","button","Component","defaultProps","onAddButton","mapDispatchToProps","contactOperations","connect","contactSelectors","Filter","filterHandler","ContactList","contactsList","onRemoveContact","TransitionGroup","component","list","length","map","CSSTransition","key","timeout","unmountOnExit","classNames","slideTransition","listItem","deleteHandler","Logo","title","Notification","container","Contacts","didMount","contactExists","handleOpenNotification","prevState","setTimeout","onChangeFilter","getSavedContacts","in","LogoSlideTransition","appear","contactList","PopTransition","module","exports"],"mappings":"6QAIAA,IAAMC,SAASC,QAAU,2CAEzB,IA2Be,GACbC,WA5BiB,SAACC,GAAD,OAAa,SAACC,GAC/BA,EAASC,IAAeC,qBAExBP,IACGQ,KAAK,YAAaJ,GAClBK,MAAK,SAACC,GAAD,OAAUL,EAASC,IAAeK,kBAAkBD,EAAKE,UAC9DC,OAAM,SAACC,GAAD,OAAWT,EAASC,IAAeS,gBAAgBD,SAuB5DE,cApBoB,SAACC,GAAD,OAAQ,SAACZ,GAC7BA,EAASC,IAAeY,wBAExBlB,IACGmB,OADH,oBACuBF,IACpBR,MAAK,kBAAMJ,EAASC,IAAec,qBAAqBH,OACxDJ,OAAM,SAACC,GAAD,OAAWT,EAASC,IAAee,mBAAmBP,SAe/DQ,cAZoB,kBAAM,SAACjB,GAC3BA,EAASC,IAAeiB,uBAExBvB,IACGwB,IADH,aAEGf,MAAK,SAACC,GAAD,OAAUL,EAASC,IAAemB,oBAAoBf,EAAKE,UAChEC,OAAM,SAACC,GAAD,OAAWT,EAASC,IAAeoB,kBAAkBZ,U,QC3B1Da,EAAkB,SAACC,GAAD,OAAWA,EAAMC,SAASC,OAWnC,GACbH,kBACAI,sBAT4BC,YAC5B,CAACL,EAHqB,SAAAC,GAAK,OAAIA,EAAMC,SAASI,UAI9C,SAACH,EAAOG,GAAR,OAAmBH,EAAMG,QAAO,SAACC,GAAD,OAChCA,EAAKC,KAAKC,cAAcC,SAASJ,EAAOG,sBCApCE,E,4MAWJV,MAAQ,CACNO,KAAM,GACNI,OAAQ,I,EAGVC,WAAa,SAACC,GACZA,EAAEC,OAAOC,MAAQ,I,EAGnBC,aAAe,SAACH,GAAO,IAAD,EACIA,EAAEC,OAAlBP,EADY,EACZA,KAAMQ,EADM,EACNA,MAEd,EAAKE,SAAL,eACGV,EAAOQ,K,EAIZG,iBAAmB,SAACL,GAAO,IAAD,EACC,EAAKb,MAAtBO,EADgB,EAChBA,KAAMI,EADU,EACVA,OAEdE,EAAEM,iBAEmB,EAAKC,MAAMnB,SAASoB,MACvC,SAAC7C,GAAD,OAAaA,EAAQ+B,OAASA,KAI9B,EAAKa,MAAME,sBAIb,EAAKF,MAAMG,aAAa,CAAEhB,OAAMI,WAEhC,EAAKM,SAAS,CAAEV,KAAM,GAAII,OAAQ,O,uDAIlC,OACE,0BAAMa,SAAUC,KAAKP,kBACnB,yBAAKQ,UAAWC,IAAOC,OACrB,uBAAGF,UAAWC,IAAOE,WAArB,QACA,2BACEH,UAAWC,IAAOC,MAClBE,KAAK,OACLC,YAAY,aACZxB,KAAK,OACLyB,SAAUP,KAAKT,aACfiB,QAASR,KAAKb,aAEhB,uBAAGc,UAAWC,IAAOE,WAArB,qBACA,2BACEH,UAAWC,IAAOC,MAClBE,KAAK,MACLC,YAAY,eACZxB,KAAK,SACL2B,QAAQ,6BACRF,SAAUP,KAAKT,aACfiB,QAASR,KAAKb,cAGlB,4BAAQkB,KAAK,SAASJ,UAAWC,IAAOQ,QAAxC,oB,GAvEkBC,aAApB1B,EACG2B,aAAe,CACpBC,YAAa,cA6EjB,IAAMC,EAAqB,CACzBhB,aAAciB,EAAkBjE,YAOnBkE,eAJS,SAACzC,GAAD,MAAY,CAClCC,SAAUyC,EAAiBvC,sBAAsBH,MAGXuC,EAAzBE,CAA6C/B,G,iBC3F7C,SAASiC,EAAT,GAAoC,IAAlBC,EAAiB,EAAjBA,cAC/B,OACE,oCACE,uBAAGlB,UAAWC,IAAOE,WAArB,yBACA,2BACEH,UAAWC,IAAOC,MAClBE,KAAK,OACLC,YAAY,aACZxB,KAAK,SACLyB,SAAUY,KAMlBD,EAAON,aAAe,CACpBO,cAAe,c,+CCXjB,SAASC,EAAT,GAAyD,IAAlCC,EAAiC,EAAjCA,aAAcC,EAAmB,EAAnBA,gBACnC,OACE,oCACE,kBAACC,EAAA,EAAD,CAAiBC,UAAU,KAAKvB,UAAWC,IAAOuB,MAC/CJ,EAAaK,OAAS,GACrBL,EAAaM,KAAI,gBAAG/D,EAAH,EAAGA,GAAIkB,EAAP,EAAOA,KAAMI,EAAb,EAAaA,OAAb,OACf,kBAAC0C,EAAA,EAAD,CACEC,IAAKjE,EACLkE,QAAS,IACTC,eAAa,EACbC,WAAYC,KAEZ,wBAAIJ,IAAKjE,EAAIqC,UAAWC,IAAOgC,UAC7B,4BACEjC,UAAWC,IAAOQ,OAClBL,KAAK,SACLG,QAAS,kBAAMc,EAAgB1D,KAHjC,UAOCkB,EARH,KAQWI,SASzBkC,EAAYR,aAAe,CACzBS,aAAc,GACdc,cAAe,cAejB,IAAMrB,EAAqB,CACzBQ,gBAAiBP,EAAkBpD,eAOtBqD,eAJS,SAACzC,GAAD,MAAY,CAClC8C,aAAcJ,EAAiBvC,sBAAsBH,MAGfuC,EAAzBE,CAA6CI,G,iBC7D7C,SAASgB,IACtB,OAAO,wBAAInC,UAAWC,IAAOmC,OAAtB,iB,qBCFM,SAASC,IACpB,OACI,yBAAKrC,UAAWC,IAAOqC,WACnB,uD,uDCaNC,E,4MACJjE,MAAQ,CACNkE,UAAU,EACVC,eAAe,G,EAQjBC,uBAAyB,WACvB,EAAKnD,UACH,SAACoD,GAAD,MAAgB,CACdF,eAAgBE,EAAUF,kBAE5B,kBACEG,YAAW,WACT,EAAKrD,UAAS,SAACoD,GAAD,MAAgB,CAC5BF,eAAgBE,EAAUF,oBAE3B,S,EAITvB,cAAgB,SAAC/B,GACf,EAAKO,MAAMmD,eAAe1D,EAAEC,OAAOC,Q,kEAnBnCU,KAAKR,SAAS,CAAEiD,UAAU,IAC1BzC,KAAKL,MAAMoD,qB,+BAqBH,IAAD,EAC6B/C,KAAKzB,MAAjCkE,EADD,EACCA,SAAUC,EADX,EACWA,cAElB,OACE,oCACE,yBAAKzC,UAAU,OACb,kBAAC2B,EAAA,EAAD,CACEoB,GAAIP,EACJX,QAAS,IACTE,WAAYiB,IACZC,QAAM,GAEN,kBAACd,EAAD,OAGF,kBAAC,EAAD,CAAavC,mBAAoBG,KAAK2C,yBAEtC,wBAAI1C,UAAWC,IAAOiD,aAAtB,iBAEA,kBAACjC,EAAD,CAAQC,cAAenB,KAAKmB,gBAC5B,kBAAC,EAAD,OAGF,kBAACS,EAAA,EAAD,CACEoB,GAAIN,EACJZ,QAAS,IACTC,eAAa,EACbC,WAAYoB,KAEZ,kBAACd,EAAD,Y,GA1Da3B,aAiEjBG,EAAqB,CACzBgC,eAAgB7F,IAAe2B,OAC/BmE,iBAAkBhC,EAAkB9C,eAGvB+C,sBAAQ,KAAMF,EAAdE,CAAkCwB,I,mBCxFjDa,EAAOC,QAAU,CAAC,UAAY,+BAA+B,MAAQ,2BAA2B,OAAS,8B,mBCAzGD,EAAOC,QAAU,CAAC,UAAY,0BAA0B,MAAQ,wB,mBCAhED,EAAOC,QAAU,CAAC,OAAS,4BAA4B,KAAO,0BAA0B,SAAW,gC,mBCAnGD,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,YAAc,2BAA2B,KAAO,oBAAoB,WAAa,4B,mBCAhID,EAAOC,QAAU,CAAC,MAAQ,sB,mBCA1BD,EAAOC,QAAU,CAAC,UAAY,kC,mBCA9BD,EAAOC,QAAU,CAAC,MAAQ,yBAAyB,YAAc,+BAA+B,KAAO,wBAAwB,WAAa,gC,mBCA5ID,EAAOC,QAAU,CAAC,MAAQ,mBAAmB,YAAc,yBAAyB,KAAO,kBAAkB,WAAa,0B,mBCA1HD,EAAOC,QAAU,CAAC,YAAc","file":"static/js/3.f460092e.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nimport contactActions from \"./contactActions\";\r\n\r\naxios.defaults.baseURL = \"https://goit-phonebook-api.herokuapp.com\";\r\n\r\nconst addContact = (contact) => (dispatch) => {\r\n  dispatch(contactActions.addContactRequest());\r\n\r\n  axios\r\n    .post(\"/contacts\", contact)\r\n    .then((resp) => dispatch(contactActions.addContactSuccess(resp.data)))\r\n    .catch((error) => dispatch(contactActions.addContactError(error)));\r\n};\r\n\r\nconst removeContact = (id) => (dispatch) => {\r\n  dispatch(contactActions.removeContactRequest());\r\n\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => dispatch(contactActions.removeContactSuccess(id)))\r\n    .catch((error) => dispatch(contactActions.removeContactError(error)));\r\n};\r\n\r\nconst fetchContacts = () => (dispatch) => {\r\n  dispatch(contactActions.fetchContactRequest());\r\n\r\n  axios\r\n    .get(`/contacts`)\r\n    .then((resp) => dispatch(contactActions.fetchContactSuccess(resp.data)))\r\n    .catch((error) => dispatch(contactActions.fetchContactError(error)));\r\n};\r\n\r\nexport default {\r\n  addContact,\r\n  removeContact,\r\n  fetchContacts,\r\n};\r\n","import { createSelector } from '@reduxjs/toolkit'\r\n\r\n\r\nconst getContactItems = (state) => state.contacts.items;\r\n\r\nconst getFilterString = state => state.contacts.filter\r\n\r\nconst getFitredContactItems = createSelector(\r\n  [getContactItems, getFilterString],\r\n  (items, filter) => items.filter((item) =>\r\n  item.name.toLowerCase().includes(filter.toLowerCase())\r\n)\r\n)\r\n\r\nexport default {\r\n  getContactItems,\r\n  getFitredContactItems,\r\n};\r\n","import React, { Component } from \"react\";\r\nimport styles from \"./ContactForm.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport contactOperations from \"../../redux/contact/contactOperations\";\r\n\r\nimport contactSelectors from \"../../redux/contact/contactSelectors\";\r\n\r\nclass ContactForm extends Component {\r\n  static defaultProps = {\r\n    onAddButton: () => {\r\n      return;\r\n    },\r\n  };\r\n\r\n  static propTypes = {\r\n    onAddButton: PropTypes.func.isRequired,\r\n  };\r\n\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  clearInput = (e) => {\r\n    e.target.value = \"\";\r\n  };\r\n\r\n  inputHandler = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  addButtonHandler = (e) => {\r\n    const { name, number } = this.state;\r\n\r\n    e.preventDefault();\r\n\r\n    const isInContacts = this.props.contacts.some(\r\n      (contact) => contact.name === name\r\n    );\r\n\r\n    if (isInContacts) {\r\n      this.props.onOpenNotification();\r\n      return;\r\n    }\r\n\r\n    this.props.onAddContact({ name, number });\r\n\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.addButtonHandler}>\r\n        <div className={styles.input}>\r\n          <p className={styles.fieldName}>Name</p>\r\n          <input\r\n            className={styles.input}\r\n            type=\"text\"\r\n            placeholder=\"Input name\"\r\n            name=\"name\"\r\n            onChange={this.inputHandler}\r\n            onClick={this.clearInput}\r\n          />\r\n          <p className={styles.fieldName}>Phone (XXX-XX-XX)</p>\r\n          <input\r\n            className={styles.input}\r\n            type=\"tel\"\r\n            placeholder=\"Input number\"\r\n            name=\"number\"\r\n            pattern=\"[0-9]{3}-[0-9]{2}-[0-9]{2}\"\r\n            onChange={this.inputHandler}\r\n            onClick={this.clearInput}\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className={styles.button}>\r\n          Add Contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  onAddContact: contactOperations.addContact,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: contactSelectors.getFitredContactItems(state),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport styles from './Filter.module.css'\r\n\r\n\r\nexport default function Filter({ filterHandler }) {\r\n  return (\r\n    <>\r\n      <p className={styles.fieldName}>Find contacts by name</p>\r\n      <input\r\n        className={styles.input}\r\n        type=\"text\"\r\n        placeholder=\"Input name\"\r\n        name=\"filter\"\r\n        onChange={filterHandler}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nFilter.defaultProps = {\r\n  filterHandler: () => {\r\n    return;\r\n  },\r\n}\r\n\r\nFilter.propTypes = {\r\n  filterHandler: PropTypes.func.isRequired,\r\n}","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./ContactList.module.css\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\nimport slideTransition from \"../../CSSTransitions/slide.module.css\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport contactOperations from \"../../redux/contact/contactOperations\";\r\nimport contactSelectors from \"../../redux/contact/contactSelectors\";\r\n\r\nfunction ContactList({ contactsList, onRemoveContact }) {\r\n  return (\r\n    <>\r\n      <TransitionGroup component=\"ul\" className={styles.list}>\r\n        {contactsList.length > 0 &&\r\n          contactsList.map(({ id, name, number }) => (\r\n            <CSSTransition\r\n              key={id}\r\n              timeout={250}\r\n              unmountOnExit\r\n              classNames={slideTransition}\r\n            >\r\n              <li key={id} className={styles.listItem}>\r\n                <button\r\n                  className={styles.button}\r\n                  type=\"button\"\r\n                  onClick={() => onRemoveContact(id)}\r\n                >\r\n                  Delete\r\n                </button>\r\n                {name}: {number}\r\n              </li>\r\n            </CSSTransition>\r\n          ))}\r\n      </TransitionGroup>\r\n    </>\r\n  );\r\n}\r\n\r\nContactList.defaultProps = {\r\n  contactsList: [],\r\n  deleteHandler: () => {\r\n    return;\r\n  },\r\n};\r\n\r\nContactList.propTypes = {\r\n  contactsList: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  onRemoveContact: contactOperations.removeContact,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contactsList: contactSelectors.getFitredContactItems(state),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import React from \"react\";\r\n\r\nimport styles from './Logo.module.css';\r\n\r\nexport default function Logo() {\r\n  return <h1 className={styles.title}>Contacts page</h1>;\r\n}\r\n","import React from 'react';\r\nimport styles from './Notification.module.css';\r\n\r\nexport default function Notification() {\r\n    return (\r\n        <div className={styles.container}>\r\n            <p>Contact already exists!</p>\r\n        </div>\r\n    )\r\n}","import React, { Component } from \"react\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport ContactForm from \"../../components/ContactForm/ContactForm\";\r\nimport Filter from \"../../components/Filter/Filter\";\r\nimport ContactList from \"../../components/ContactList/ContactList\";\r\n\r\nimport Logo from \"../../components/Logo/Logo\";\r\nimport Notification from \"../../components/Notification/Notification\";\r\n\r\nimport LogoSlideTransition from \"../../CSSTransitions/slideLogo.module.css\";\r\nimport PopTransition from \"../../CSSTransitions/pop.module.css\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport contactActions from \"../../redux/contact/contactActions\";\r\nimport contactOperations from \"../../redux/contact/contactOperations\";\r\n\r\nimport styles from './Contacts.module.css'\r\n\r\nclass Contacts extends Component {\r\n  state = {\r\n    didMount: false,\r\n    contactExists: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ didMount: true });\r\n    this.props.getSavedContacts();\r\n  }\r\n\r\n  handleOpenNotification = () => {\r\n    this.setState(\r\n      (prevState) => ({\r\n        contactExists: !prevState.contactExists,\r\n      }),\r\n      () =>\r\n        setTimeout(() => {\r\n          this.setState((prevState) => ({\r\n            contactExists: !prevState.contactExists,\r\n          }));\r\n        }, 1000)\r\n    );\r\n  };\r\n\r\n  filterHandler = (e) => {\r\n    this.props.onChangeFilter(e.target.value);\r\n  };\r\n\r\n  render() {\r\n    const { didMount, contactExists } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <div className=\"App\">\r\n          <CSSTransition\r\n            in={didMount}\r\n            timeout={500}\r\n            classNames={LogoSlideTransition}\r\n            appear\r\n          >\r\n            <Logo />\r\n          </CSSTransition>\r\n\r\n          <ContactForm onOpenNotification={this.handleOpenNotification} />\r\n\r\n          <h3 className={styles.contactList}>Contacts list</h3>\r\n\r\n          <Filter filterHandler={this.filterHandler} />\r\n          <ContactList />\r\n        </div>\r\n\r\n        <CSSTransition\r\n          in={contactExists}\r\n          timeout={250}\r\n          unmountOnExit\r\n          classNames={PopTransition}\r\n        >\r\n          <Notification />\r\n        </CSSTransition>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  onChangeFilter: contactActions.filter,\r\n  getSavedContacts: contactOperations.fetchContacts,\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Contacts);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fieldName\":\"ContactForm_fieldName__1GIZD\",\"input\":\"ContactForm_input__1vAKu\",\"button\":\"ContactForm_button__2Mt7f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fieldName\":\"Filter_fieldName__Qg5Zf\",\"input\":\"Filter_input__163qf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ContactList_button__2-tRA\",\"list\":\"ContactList_list__3og-G\",\"listItem\":\"ContactList_listItem__38lrc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"slide_enter__1n6pI\",\"enterActive\":\"slide_enterActive__Xw929\",\"exit\":\"slide_exit__3LAxK\",\"exitActive\":\"slide_exitActive__35IvL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Logo_title__1soWt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Notification_container__12jPK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"slideLogo_enter__2YZWY\",\"enterActive\":\"slideLogo_enterActive__1yMwS\",\"exit\":\"slideLogo_exit__AJYGv\",\"exitActive\":\"slideLogo_exitActive__3sAby\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"pop_enter__DJXug\",\"enterActive\":\"pop_enterActive__3t8D9\",\"exit\":\"pop_exit__3z4Yl\",\"exitActive\":\"pop_exitActive__2VTgV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"Contacts_contactList__1AwNa\"};"],"sourceRoot":""}